package com.arc.paddleRoyale.vo{	import com.arc.paddleRoyale.vo.PlayerType;		import flash.system.Capabilities;	public class Constants	{		public static const DEFAULT_NAME:String = "com.arc.paddleRoyale.vo.Constants";				public static function get IS_ANDROID():Boolean 	{ return Capabilities.version.lastIndexOf("AND") == 0; }		public static function get IS_BLACKBERRY():Boolean 	{ return Capabilities.version.lastIndexOf("QNX") == 0; }		public static function get IS_DESKTOP():Boolean 	{ return Capabilities.playerType == PlayerType.DESKTOP && !IS_MOBILE; }		public static function get IS_IOS():Boolean 		{ return Capabilities.version.lastIndexOf("IOS") == 0; }		public static function get IS_MOBILE():Boolean 		{ return IS_ANDROID || IS_IOS || IS_BLACKBERRY; }		public static function get IS_PLUGIN():Boolean 		{ return Capabilities.playerType == PlayerType.PLUGIN; }		public static function get IS_STANDALONE():Boolean		{			return Capabilities.playerType == PlayerType.STANDALONE || Capabilities.playerType == PlayerType.EXTERNAL || IS_DESKTOP;		}				public static function get DATA_URL():String		{			//return 'http://paddleroyal.localhost/_data/paddleRoyale.php';			return IS_PLUGIN && FlashVars.vars.serverURL != "" ? FlashVars.vars.serverURL : 'http://www.paddle-royale.com/results.aspx';		}						/**		 * The time (in seconds) to refresh the data.		 */		public static const DATA_REFRESH_RATE:Number 					= 15 * 1000; // Seconds * milliSecond		public static const VIEW_REFRESH_RATE:Number 					= 60 * 1000; // Seconds * milliSecond				// Cycle view		public static const CYCLE_VIEW_TIME:int							= 15 * 1000; // Seconds * milliSecond				// Physics		public static const PHYSICS_ITERATION:int						= 10;		public static const PHYSICS_DRAW_SCALE:Number					= 1/30;		public static const PHYSICS_SCALE:int							= 30; 		public static const PHYSICS_TIME_STEP:Number					= 1/30;				// Knocked out tint		public static const KNOCKED_OUT_COLOR_TRANSFORM:Object			= {tint: 0x000000, tintAmount: .75};		public static const KNOCKED_OUT_COLOR_TRANSFORM_LIGHT:Object	= {tint: 0x000000, tintAmount: .50};				// Mininum bar scale		public static const MIN_BAR_SCALE:Number						= .05;				// Time		public static function get TIME():String		{			var final:String											= "";			var d:Date													= new Date();			// Day			final														+= d.fullYear + ".";			final														+= d.month + ".";			final														+= d.date + " - ";			// Minutes, seconds, etc			final														+= d.hours + ".";			final														+= d.minutes + ".";			final														+= d.seconds + ".";			final														+= d.milliseconds + ".";			return final;		}	}}